type Ticket {
    id: ID!
    child: Child!
    ticketType: TicketType!
    issueDate: LocalDateTime
    expirationDate: LocalDateTime
    price: Float!
    numberOfParticipation: Int!
    historyLog: [HistoryData]
}
type HistoryData{
    date: LocalDateTime!
    reporter: String!
}

input TicketInput {
    childId: ID!
    ticketTypeId: ID!
    issueDate: LocalDateTime
    expirationDate: LocalDateTime
    price: Float!
    numberOfParticipation: Int!
    historyLog: [HistoryDataInput]
}
input HistoryDataInput{
    date: LocalDateTime!
    reporter: String!
}
extend type Query {
    getAllTickets: [Ticket!]!
    getTicketById(id: String!): Ticket!
    getPotentialTicketTypes(name: String!): [TicketType]
}
extend type Mutation{
    addTicket(ticket: TicketInput!): Ticket!
    updateTicket(id: String!, ticket: TicketInput!): Ticket!
    deletedTicket(id: String!): Ticket!
}